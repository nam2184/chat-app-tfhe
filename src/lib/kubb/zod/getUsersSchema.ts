/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { errorResponseSchema } from "./errorResponseSchema";
import { z } from "zod";

export const getUsersSchema = z.object({
  array: z
    .array(
      z.object({
        email: z.string().optional(),
        first_name: z.string().optional(),
        id: z.number().int().optional(),
        surname: z.string().optional(),
        username: z.string().optional(),
      }),
    )
    .optional(),
  meta: z
    .object({
      total: z.number().int().nullable().nullish(),
    })
    .optional(),
});

export const getUsersQueryParamsSchema = z
  .object({
    skip: z.coerce.number().int().optional(),
    limit: z.coerce.number().int().optional(),
    order_by: z.string().optional(),
    sort_by: z.string().optional(),
  })
  .optional();

/**
 * @description Users retrieved
 */
export const getUsers200Schema = z.lazy(() => getUsersSchema);

/**
 * @description Failure
 */
export const getUsers400Schema = z.lazy(() => errorResponseSchema);

export const getUsersErrorSchema = z.any();

export const getUsersQueryResponseSchema = z.lazy(() => getUsers200Schema);
