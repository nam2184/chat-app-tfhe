/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { errorResponseSchema } from "./errorResponseSchema";
import { z } from "zod";

export const getMessagesSchema = z.object({
  array: z
    .array(
      z.object({
        chat_id: z.number().int().min(0).optional(),
        classification_result: z.string().optional(),
        content: z.string().optional(),
        id: z.number().int().min(0).optional(),
        image: z.string().optional(),
        is_typing: z.boolean().optional(),
        iv: z.string().optional(),
        receiver_id: z.number().int().min(0).optional(),
        sender_id: z.number().int().min(0).optional(),
        sender_name: z.string().optional(),
        timestamp: z.string().datetime().optional(),
        type: z.string().optional(),
      }),
    )
    .optional(),
  meta: z
    .object({
      total: z.number().int().nullable().nullish(),
    })
    .optional(),
});

export const getMessagesPathParamsSchema = z.object({
  chatID: z.coerce.number().int(),
});

export const getMessagesQueryParamsSchema = z
  .object({
    skip: z.coerce.number().int().optional(),
    limit: z.coerce.number().int().optional(),
    order_by: z.string().optional(),
    sort_by: z.string().optional(),
  })
  .optional();

/**
 * @description Messages retrieved
 */
export const getMessages200Schema = z.lazy(() => getMessagesSchema);

/**
 * @description Failure
 */
export const getMessages400Schema = z.lazy(() => errorResponseSchema);

export const getMessagesErrorSchema = z.any();

export const getMessagesQueryResponseSchema = z.lazy(
  () => getMessages200Schema,
);
